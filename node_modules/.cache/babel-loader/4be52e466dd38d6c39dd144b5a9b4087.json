{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from 'configs/AppConfig';\nimport { signOutSuccess } from 'store/slices/authSlice';\nimport store from '../store';\nimport { AUTH_TOKEN } from 'constants/AuthConstant';\nimport { notification } from 'antd';\nconst unauthorizedCode = [400, 401, 403];\nconst service = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000\n}); // Config\n\nconst TOKEN_PAYLOAD_KEY = 'authorization'; // API Request interceptor\n\nservice.interceptors.request.use(config => {\n  const jwtToken = localStorage.getItem(AUTH_TOKEN) || null;\n\n  if (jwtToken) {\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken;\n  }\n\n  return config;\n}, error => {\n  // Do something with request error here\n  notification.error({\n    message: 'Error'\n  });\n  Promise.reject(error);\n}); // API respone interceptor\n\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  let notificationParam = {\n    message: ''\n  }; // Remove token and redirect \n\n  if (unauthorizedCode.includes(error.response.status)) {\n    notificationParam.message = 'Authentication Fail';\n    notificationParam.description = 'Please login again';\n    localStorage.removeItem(AUTH_TOKEN);\n    store.dispatch(signOutSuccess());\n  }\n\n  if (error.response.status === 404) {\n    notificationParam.message = 'Not Found';\n  }\n\n  if (error.response.status === 500) {\n    notificationParam.message = 'Internal Server Error';\n  }\n\n  if (error.response.status === 508) {\n    notificationParam.message = 'Time Out';\n  }\n\n  notification.error(notificationParam);\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","API_BASE_URL","signOutSuccess","store","AUTH_TOKEN","notification","unauthorizedCode","service","create","baseURL","timeout","TOKEN_PAYLOAD_KEY","interceptors","request","use","config","jwtToken","localStorage","getItem","headers","error","message","Promise","reject","response","data","notificationParam","includes","status","description","removeItem","dispatch"],"sources":["/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/src/auth/FetchInterceptor.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL } from 'configs/AppConfig';\r\nimport { signOutSuccess } from 'store/slices/authSlice';\r\nimport store from '../store';\r\nimport { AUTH_TOKEN } from 'constants/AuthConstant';\r\nimport { notification } from 'antd';\r\n\r\nconst unauthorizedCode = [400, 401, 403]\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN) || null;\r\n\t\r\n\tif (jwtToken) {\r\n\t\tconfig.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n\t}\r\n\r\n  \treturn config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n\tPromise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\r\n\t// Remove token and redirect \r\n\tif (unauthorizedCode.includes(error.response.status)) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\r\n\t\tstore.dispatch(signOutSuccess())\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,MAAMC,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAzB;AAEA,MAAMC,OAAO,GAAGP,KAAK,CAACQ,MAAN,CAAa;EAC3BC,OAAO,EAAER,YADkB;EAE3BS,OAAO,EAAE;AAFkB,CAAb,CAAhB,C,CAKA;;AACA,MAAMC,iBAAiB,GAAG,eAA1B,C,CAEA;;AACAJ,OAAO,CAACK,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiCC,MAAM,IAAI;EAC1C,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBd,UAArB,KAAoC,IAArD;;EAEA,IAAIY,QAAJ,EAAc;IACbD,MAAM,CAACI,OAAP,CAAeR,iBAAf,IAAoCK,QAApC;EACA;;EAEC,OAAOD,MAAP;AACF,CARD,EAQGK,KAAK,IAAI;EACX;EACAf,YAAY,CAACe,KAAb,CAAmB;IAClBC,OAAO,EAAE;EADS,CAAnB;EAGAC,OAAO,CAACC,MAAR,CAAeH,KAAf;AACA,CAdD,E,CAgBA;;AACAb,OAAO,CAACK,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B,CAAoCU,QAAD,IAAc;EAChD,OAAOA,QAAQ,CAACC,IAAhB;AACA,CAFD,EAEIL,KAAD,IAAW;EAEb,IAAIM,iBAAiB,GAAG;IACvBL,OAAO,EAAE;EADc,CAAxB,CAFa,CAMb;;EACA,IAAIf,gBAAgB,CAACqB,QAAjB,CAA0BP,KAAK,CAACI,QAAN,CAAeI,MAAzC,CAAJ,EAAsD;IACrDF,iBAAiB,CAACL,OAAlB,GAA4B,qBAA5B;IACAK,iBAAiB,CAACG,WAAlB,GAAgC,oBAAhC;IACAZ,YAAY,CAACa,UAAb,CAAwB1B,UAAxB;IAEAD,KAAK,CAAC4B,QAAN,CAAe7B,cAAc,EAA7B;EACA;;EAED,IAAIkB,KAAK,CAACI,QAAN,CAAeI,MAAf,KAA0B,GAA9B,EAAmC;IAClCF,iBAAiB,CAACL,OAAlB,GAA4B,WAA5B;EACA;;EAED,IAAID,KAAK,CAACI,QAAN,CAAeI,MAAf,KAA0B,GAA9B,EAAmC;IAClCF,iBAAiB,CAACL,OAAlB,GAA4B,uBAA5B;EACA;;EAED,IAAID,KAAK,CAACI,QAAN,CAAeI,MAAf,KAA0B,GAA9B,EAAmC;IAClCF,iBAAiB,CAACL,OAAlB,GAA4B,UAA5B;EACA;;EAEDhB,YAAY,CAACe,KAAb,CAAmBM,iBAAnB;EAEA,OAAOJ,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACA,CAhCD;AAkCA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}