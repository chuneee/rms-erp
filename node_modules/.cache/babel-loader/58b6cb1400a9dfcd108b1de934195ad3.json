{"ast":null,"code":"var _jsxFileName = \"/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/src/components/layout-components/HeaderNav/index.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TEMPLATE } from 'constants/ThemeConstant';\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport Logo from '../Logo';\nimport NavProfile from '../NavProfile';\nimport Header from './Header';\nimport HeaderWrapper from './HeaderWrapper';\nimport Nav from './Nav';\nimport NavEdge from './NavEdge';\nimport NavItem from '../NavItem';\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\nimport utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const HeaderNav = props => {\n  _s();\n\n  const {\n    isMobile\n  } = props;\n  const dispatch = useDispatch();\n  const navCollapsed = useSelector(state => state.theme.navCollapsed);\n  const mobileNav = useSelector(state => state.theme.mobileNav);\n  const navType = useSelector(state => state.theme.navType);\n  const headerNavColor = useSelector(state => state.theme.headerNavColor);\n  const currentTheme = useSelector(state => state.theme.currentTheme);\n\n  const onToggle = () => {\n    if (!isMobile) {\n      dispatch(toggleCollapsedNav(!navCollapsed));\n    } else {\n      dispatch(onMobileNavToggle(!mobileNav));\n    }\n  };\n\n  const isNavTop = navType === NAV_TYPE_TOP;\n  const isDarkTheme = currentTheme === 'dark';\n  const navMode = useMemo(() => {\n    if (!headerNavColor) {\n      return utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff');\n    }\n\n    return utils.getColorContrast(headerNavColor);\n  }, [isDarkTheme, headerNavColor]);\n  const navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\n\n  const getNavWidth = () => {\n    if (isNavTop || isMobile) {\n      return '0px';\n    }\n\n    if (navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n      return `${SIDE_NAV_WIDTH}px`;\n    }\n  };\n\n  return _jsxDEV(Header, {\n    isDarkTheme: isDarkTheme,\n    headerNavColor: headerNavColor || navBgColor,\n    children: _jsxDEV(HeaderWrapper, {\n      isNavTop: isNavTop,\n      children: [_jsxDEV(Logo, {\n        logoType: navMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), _jsxDEV(Nav, {\n        navWidth: getNavWidth(),\n        children: [_jsxDEV(NavEdge, {\n          left: true,\n          children: isNavTop && !isMobile ? null : _jsxDEV(NavItem, {\n            onClick: onToggle,\n            mode: navMode,\n            children: _jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: navCollapsed || isMobile ? _jsxDEV(MenuUnfoldOutlined, {\n                className: \"nav-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 39\n              }, this) : _jsxDEV(MenuFoldOutlined, {\n                className: \"nav-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), _jsxDEV(NavEdge, {\n          right: true,\n          children: _jsxDEV(NavProfile, {\n            mode: navMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HeaderNav, \"9tOwcOvugvKYLgtyiJLNllpRrUA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = HeaderNav;\nexport default HeaderNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderNav\");","map":{"version":3,"names":["useMemo","useSelector","useDispatch","TEMPLATE","MenuFoldOutlined","MenuUnfoldOutlined","Logo","NavProfile","Header","HeaderWrapper","Nav","NavEdge","NavItem","toggleCollapsedNav","onMobileNavToggle","NAV_TYPE_TOP","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_WIDTH","utils","HeaderNav","props","isMobile","dispatch","navCollapsed","state","theme","mobileNav","navType","headerNavColor","currentTheme","onToggle","isNavTop","isDarkTheme","navMode","getColorContrast","navBgColor","HEADER_BG_DEFAULT_COLOR_DARK","HEADER_BG_DEFAULT_COLOR_LIGHT","getNavWidth"],"sources":["/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/src/components/layout-components/HeaderNav/index.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from '../Logo';\r\nimport NavProfile from '../NavProfile';\r\nimport Header from './Header';\r\nimport HeaderWrapper from './HeaderWrapper';\r\nimport Nav from './Nav'\r\nimport NavEdge from './NavEdge';\r\nimport NavItem from '../NavItem';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP \r\n\tconst isDarkTheme = currentTheme === 'dark'\r\n\r\n    const navMode = useMemo(() => {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}, [isDarkTheme, headerNavColor])\r\n\r\n\tconst navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Header isDarkTheme={isDarkTheme} headerNavColor={headerNavColor || navBgColor}>\r\n\t\t\t<HeaderWrapper isNavTop={isNavTop}>\r\n\t\t\t\t<Logo logoType={navMode}/>\r\n\t\t\t\t<Nav navWidth={getNavWidth()}>\r\n\t\t\t\t\t<NavEdge left>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisNavTop && !isMobile ? null : (\r\n\t\t\t\t\t\t\t\t<NavItem onClick={onToggle} mode={navMode}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t\t<NavEdge right>\r\n\t\t\t\t\t\t<NavProfile mode={navMode} />\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t</Nav>\r\n\t\t\t</HeaderWrapper>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;"],"mappings":"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"},"metadata":{},"sourceType":"module"}