{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction findCommentNode(comment) {\n  var head = document.head;\n\n  for (var i = 0; i < head.childNodes.length; i++) {\n    var _node$nodeValue;\n\n    var node = head.childNodes[i];\n\n    if (node.nodeType === 8 && (node === null || node === void 0 ? void 0 : (_node$nodeValue = node.nodeValue) === null || _node$nodeValue === void 0 ? void 0 : _node$nodeValue.trim()) === comment) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\nfunction arrayToObject(array) {\n  var obj = {};\n  array.forEach(function (el) {\n    return obj[el] = el;\n  });\n  return obj;\n}\n\nfunction createLinkElement(attributes) {\n  var linkElement = document.createElement('link');\n\n  for (var _i = 0, _Object$entries = Object.entries(attributes); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        attribute = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (attribute === 'onload') {\n      linkElement.onload = attributes.onload;\n      continue;\n    } // @ts-ignore\n\n\n    linkElement[attribute] = value;\n  }\n\n  return linkElement;\n}\n\nvar Status;\n\n(function (Status) {\n  Status[\"idle\"] = \"idle\";\n  Status[\"loading\"] = \"loading\";\n  Status[\"loaded\"] = \"loaded\";\n})(Status || (Status = {}));\n\nvar ThemeSwitcherContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction ThemeSwitcherProvider(_ref) {\n  var themeMap = _ref.themeMap,\n      insertionPoint = _ref.insertionPoint,\n      defaultTheme = _ref.defaultTheme,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'current-theme-style' : _ref$id,\n      _ref$attr = _ref.attr,\n      attr = _ref$attr === void 0 ? 'data-theme' : _ref$attr,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"themeMap\", \"insertionPoint\", \"defaultTheme\", \"id\", \"attr\"]);\n\n  var _React$useState = React.useState(Status.idle),\n      status = _React$useState[0],\n      setStatus = _React$useState[1];\n\n  var _React$useState2 = React.useState(),\n      currentTheme = _React$useState2[0],\n      setCurrentTheme = _React$useState2[1];\n\n  var insertStyle = React.useCallback(function (linkElement) {\n    if (insertionPoint) {\n      var insertionPointElement = findCommentNode(insertionPoint);\n\n      if (!insertionPointElement) {\n        console.warn(\"Insertion point '\" + insertionPoint + \"' does not exist. Be sure to add comment on head and that it matches the insertionPoint\");\n        return document.head.appendChild(linkElement);\n      }\n\n      var parentNode = insertionPointElement.parentNode;\n\n      if (parentNode) {\n        return parentNode.insertBefore(linkElement, insertionPointElement.nextSibling);\n      }\n    } else {\n      return document.head.appendChild(linkElement);\n    }\n  }, [insertionPoint]);\n  var switcher = React.useCallback(function (_ref2) {\n    var theme = _ref2.theme;\n    if (theme === currentTheme) return;\n    var previousStyle = document.getElementById(id);\n\n    if (previousStyle) {\n      previousStyle.remove();\n    }\n\n    if (themeMap[theme]) {\n      setStatus(Status.loading);\n      var linkElement = createLinkElement({\n        type: 'text/css',\n        rel: 'stylesheet',\n        id: id,\n        href: themeMap[theme],\n        onload: function onload() {\n          setStatus(Status.loaded);\n        }\n      });\n      insertStyle(linkElement);\n      setCurrentTheme(theme);\n    } else {\n      return console.warn('Could not find specified theme');\n    }\n\n    document.body.setAttribute(attr, theme);\n  }, [themeMap, insertStyle, attr, id, currentTheme]);\n  React.useEffect(function () {\n    if (defaultTheme) {\n      switcher({\n        theme: defaultTheme\n      });\n    }\n  }, [defaultTheme]);\n  React.useEffect(function () {\n    var themes = Object.keys(themeMap);\n    themes.map(function (theme) {\n      var themeAssetId = \"theme-prefetch-\" + theme;\n\n      if (!document.getElementById(themeAssetId)) {\n        var stylePrefetch = document.createElement('link');\n        stylePrefetch.rel = 'prefetch';\n        stylePrefetch.type = 'text/css';\n        stylePrefetch.id = themeAssetId;\n        stylePrefetch.href = themeMap[theme];\n        insertStyle(stylePrefetch);\n      }\n\n      return '';\n    });\n  }, [themeMap, insertStyle]);\n  var value = React.useMemo(function () {\n    return {\n      switcher: switcher,\n      status: status,\n      currentTheme: currentTheme,\n      themes: arrayToObject(Object.keys(themeMap))\n    };\n  }, [switcher, status, currentTheme, themeMap]);\n  return React.createElement(ThemeSwitcherContext.Provider, Object.assign({\n    value: value\n  }, rest));\n}\n\nfunction useThemeSwitcher() {\n  var context = React.useContext(ThemeSwitcherContext);\n\n  if (!context) {\n    throw new Error('To use `useThemeSwitcher`, component must be within a ThemeSwitcherProvider');\n  }\n\n  return context;\n}\n\nexports.ThemeSwitcherProvider = ThemeSwitcherProvider;\nexports.useThemeSwitcher = useThemeSwitcher;","map":{"version":3,"mappings":"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","names":["findCommentNode","comment","head","document","i","childNodes","length","node","nodeType","nodeValue","trim","arrayToObject","array","obj","forEach","el","createLinkElement","attributes","linkElement","createElement","Object","entries","attribute","value","onload","Status","ThemeSwitcherContext","React","undefined","ThemeSwitcherProvider","themeMap","insertionPoint","defaultTheme","id","_ref$id","attr","_ref$attr","rest","idle","status","setStatus","currentTheme","setCurrentTheme","insertStyle","insertionPointElement","console","warn","appendChild","parentNode","insertBefore","nextSibling","switcher","theme","previousStyle","getElementById","remove","loading","type","rel","href","loaded","body","setAttribute","themes","keys","map","themeAssetId","stylePrefetch","Provider","useThemeSwitcher","context","Error"],"sources":["/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/node_modules/react-css-theme-switcher/src/utils.ts","/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/node_modules/react-css-theme-switcher/src/index.tsx"],"sourcesContent":["export function findCommentNode(comment: string) {\n  const head = document.head;\n  for (let i = 0; i < head.childNodes.length; i++) {\n    const node = head.childNodes[i];\n    if (node.nodeType === 8 && node?.nodeValue?.trim() === comment) {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function arrayToObject(array: string[]): Record<any, string> {\n  const obj: Record<any, string> = {};\n  array.forEach(el => (obj[el] = el));\n  return obj;\n}\n\nexport function createLinkElement(attributes: Record<string, any>) {\n  const linkElement = document.createElement('link');\n\n  for (const [attribute, value] of Object.entries(attributes)) {\n    if (attribute === 'onload') {\n      linkElement.onload = attributes.onload;\n      continue;\n    }\n\n    // @ts-ignore\n    linkElement[attribute] = value;\n  }\n\n  return linkElement;\n}\n","import * as React from 'react';\nimport { findCommentNode, arrayToObject, createLinkElement } from './utils';\n\nenum Status {\n  idle = 'idle',\n  loading = 'loading',\n  loaded = 'loaded',\n}\n\ninterface IThemeSwitcherContext {\n  currentTheme: string | undefined;\n  themes: Record<any, string>;\n  switcher: ({ theme }: { theme: string }) => void;\n  status: Status;\n}\n\nconst ThemeSwitcherContext = React.createContext<\n  IThemeSwitcherContext | undefined\n>(undefined);\n\ninterface Props {\n  themeMap: Record<any, string>;\n  children?: React.ReactNode;\n  insertionPoint?: string;\n  id?: string;\n  defaultTheme?: string;\n  attr?: string;\n}\n\nexport function ThemeSwitcherProvider({\n  themeMap,\n  insertionPoint,\n  defaultTheme,\n  id = 'current-theme-style',\n  attr = 'data-theme',\n  ...rest\n}: Props) {\n  const [status, setStatus] = React.useState<Status>(Status.idle);\n  const [currentTheme, setCurrentTheme] = React.useState<string>();\n\n  const insertStyle = React.useCallback(\n    (linkElement: HTMLElement): HTMLElement | void => {\n      if (insertionPoint) {\n        const insertionPointElement = findCommentNode(insertionPoint);\n\n        if (!insertionPointElement) {\n          console.warn(\n            `Insertion point '${insertionPoint}' does not exist. Be sure to add comment on head and that it matches the insertionPoint`\n          );\n          return document.head.appendChild(linkElement);\n        }\n\n        const { parentNode } = insertionPointElement;\n        if (parentNode) {\n          return parentNode.insertBefore(\n            linkElement,\n            insertionPointElement.nextSibling\n          );\n        }\n      } else {\n        return document.head.appendChild(linkElement);\n      }\n    },\n    [insertionPoint]\n  );\n\n  const switcher = React.useCallback(\n    ({ theme }: { theme: string }) => {\n      if (theme === currentTheme) return;\n\n      const previousStyle = document.getElementById(id);\n      if (previousStyle) {\n        previousStyle.remove();\n      }\n\n      if (themeMap[theme]) {\n        setStatus(Status.loading);\n\n        const linkElement = createLinkElement({\n          type: 'text/css',\n          rel: 'stylesheet',\n          id: id,\n          href: themeMap[theme],\n          onload: () => {\n            setStatus(Status.loaded);\n          },\n        });\n\n        insertStyle(linkElement);\n        setCurrentTheme(theme);\n      } else {\n        return console.warn('Could not find specified theme');\n      }\n\n      document.body.setAttribute(attr, theme);\n    },\n    [themeMap, insertStyle, attr, id, currentTheme]\n  );\n\n  React.useEffect(() => {\n    if (defaultTheme) {\n      switcher({ theme: defaultTheme });\n    }\n  }, [defaultTheme]);\n\n  React.useEffect(() => {\n    const themes = Object.keys(themeMap);\n\n    themes.map(theme => {\n      const themeAssetId = `theme-prefetch-${theme}`;\n      if (!document.getElementById(themeAssetId)) {\n        const stylePrefetch = document.createElement('link');\n        stylePrefetch.rel = 'prefetch';\n        stylePrefetch.type = 'text/css';\n        stylePrefetch.id = themeAssetId;\n        stylePrefetch.href = themeMap[theme];\n\n        insertStyle(stylePrefetch);\n      }\n      return '';\n    });\n  }, [themeMap, insertStyle]);\n\n  const value = React.useMemo(\n    () => ({\n      switcher,\n      status,\n      currentTheme,\n      themes: arrayToObject(Object.keys(themeMap)),\n    }),\n    [switcher, status, currentTheme, themeMap]\n  );\n\n  return <ThemeSwitcherContext.Provider value={value} {...rest} />;\n}\n\nexport function useThemeSwitcher() {\n  const context = React.useContext(ThemeSwitcherContext);\n  if (!context) {\n    throw new Error(\n      'To use `useThemeSwitcher`, component must be within a ThemeSwitcherProvider'\n    );\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"script"}