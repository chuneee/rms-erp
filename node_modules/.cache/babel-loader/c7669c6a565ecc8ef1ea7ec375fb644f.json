{"ast":null,"code":"import { __rest, __assign, __spreadArrays } from 'tslib';\nimport { warning, invariant } from 'hey-listen';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\n\nfunction findSpring(_a) {\n  var _b = _a.duration,\n      duration = _b === void 0 ? 800 : _b,\n      _c = _a.bounce,\n      bounce = _c === void 0 ? 0.25 : _c,\n      _d = _a.velocity,\n      velocity = _d === void 0 ? 0 : _d,\n      _e = _a.mass,\n      mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n  duration = clamp(minDuration, maxDuration, duration / 1000);\n\n  if (dampingRatio < 1) {\n    envelope = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var a = exponentialDecay - velocity;\n      var b = calcAngularFreq(undampedFreq, dampingRatio);\n      var c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n\n    derivative = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var d = delta * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      var f = Math.exp(-delta);\n      var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n\n    derivative = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness: stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n    };\n  }\n}\n\nvar rootIterations = 12;\n\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n\n  return result;\n}\n\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\n\nfunction isSpringType(options, keys) {\n  return keys.some(function (key) {\n    return options[key] !== undefined;\n  });\n}\n\nfunction getSpringOptions(options) {\n  var springOptions = __assign({\n    velocity: 0.0,\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    isResolvedFromDuration: false\n  }, options);\n\n  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n    var derived = findSpring(options);\n    springOptions = __assign(__assign(__assign({}, springOptions), derived), {\n      velocity: 0.0,\n      mass: 1.0\n    });\n    springOptions.isResolvedFromDuration = true;\n  }\n\n  return springOptions;\n}\n\nfunction spring(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0.0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1.0 : _c,\n      _d = _a.restSpeed,\n      restSpeed = _d === void 0 ? 2 : _d,\n      restDelta = _a.restDelta,\n      options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n\n  var state = {\n    done: false,\n    value: from\n  };\n\n  var _e = getSpringOptions(options),\n      stiffness = _e.stiffness,\n      damping = _e.damping,\n      mass = _e.mass,\n      velocity = _e.velocity,\n      isResolvedFromDuration = _e.isResolvedFromDuration;\n\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= options.duration;\n      }\n\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\n\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\n\nvar zero = function (_t) {\n  return 0;\n};\n\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\n\nvar colorTypes = [hex, rgba, hsla];\n\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\n\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\n\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n\n  var blended = __assign({}, fromColor);\n\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== 'alpha') {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function () {\n  var transformers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\n\nvar mixArray = function (from, to) {\n  var output = __spreadArrays(from);\n\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n\n    return output;\n  };\n};\n\nvar mixObject = function (origin, target) {\n  var output = __assign(__assign({}, origin), target);\n\n  var blendValue = {};\n\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n\n    return output;\n  };\n};\n\nfunction analyse(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === 'number') {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\n\nvar mixComplex = function (origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      isClamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\n\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\n\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\n\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\n\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\n\nvar linear = function (p) {\n  return p;\n};\n\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\n\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\n\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\n\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\n\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\n\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\n\nfunction keyframes(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1 : _c,\n      ease = _a.ease,\n      offset = _a.offset,\n      _d = _a.duration,\n      duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n\n  var interpolator = createInterpolator();\n  return {\n    next: function (t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function () {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\nfunction decay(_a) {\n  var _b = _a.velocity,\n      velocity = _b === void 0 ? 0 : _b,\n      _c = _a.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 350 : _e,\n      _f = _a.restDelta,\n      restDelta = _f === void 0 ? 0.5 : _f,\n      modifyTarget = _a.modifyTarget;\n  var state = {\n    done: false,\n    value: from\n  };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  if (target !== ideal) amplitude = target - from;\n  return {\n    next: function (t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function () {}\n  };\n}\n\nvar types = {\n  keyframes: keyframes,\n  spring: spring,\n  decay: decay\n};\n\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n\n  var keys = new Set(Object.keys(config));\n\n  if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n    return keyframes;\n  } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n    return spring;\n  }\n\n  return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return elapsed - duration - delay;\n}\n\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\n\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n\n  return {\n    start: function () {\n      return sync.update(passTimestamp, true, true);\n    },\n    stop: function () {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\n\nfunction animate(_a) {\n  var _b, _c;\n\n  var from = _a.from,\n      _d = _a.autoplay,\n      autoplay = _d === void 0 ? true : _d,\n      _e = _a.driver,\n      driver = _e === void 0 ? framesync : _e,\n      _f = _a.elapsed,\n      elapsed = _f === void 0 ? 0 : _f,\n      _g = _a.repeat,\n      repeatMax = _g === void 0 ? 0 : _g,\n      _h = _a.repeatType,\n      repeatType = _h === void 0 ? \"loop\" : _h,\n      _j = _a.repeatDelay,\n      repeatDelay = _j === void 0 ? 0 : _j,\n      onPlay = _a.onPlay,\n      onStop = _a.onStop,\n      onComplete = _a.onComplete,\n      onRepeat = _a.onRepeat,\n      onUpdate = _a.onUpdate,\n      options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n\n  var animation = animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.velocity,\n      velocity = _c === void 0 ? 0 : _c,\n      min = _a.min,\n      max = _a.max,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 750 : _e,\n      _f = _a.bounceStiffness,\n      bounceStiffness = _f === void 0 ? 500 : _f,\n      _g = _a.bounceDamping,\n      bounceDamping = _g === void 0 ? 10 : _g,\n      _h = _a.restDelta,\n      restDelta = _h === void 0 ? 1 : _h,\n      modifyTarget = _a.modifyTarget,\n      driver = _a.driver,\n      onUpdate = _a.onUpdate,\n      onComplete = _a.onComplete;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\n\nvar identity = function (v) {\n  return v;\n};\n\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\n\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\n\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\n\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\n\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\n\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\n\nvar c = function (a1) {\n  return 3.0 * a1;\n};\n\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\n\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\n\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\n\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n\n  return currentT;\n}\n\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\n\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n\n  return aGuessT;\n}\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\n\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };","map":{"version":3,"names":["__rest","__assign","__spreadArrays","warning","invariant","hex","rgba","hsla","complex","color","sync","cancelSync","getFrameData","clamp","min","max","v","Math","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_a","_b","duration","_c","bounce","_d","velocity","_e","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i","durationKeys","physicsKeys","isSpringType","options","keys","some","key","undefined","getSpringOptions","springOptions","isResolvedFromDuration","derived","spring","from","to","restSpeed","restDelta","state","done","value","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","abs","angularFreq_1","t","sin","cos","dampedAngularFreq_1","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","progress","toFromDifference","mix","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","type","test","notAnimatable","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","alpha","zeroPoint","x","y","z","isNum","combineFunctions","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","o","keyframes","times","createInterpolator","decay","timeConstant","_f","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","config","Set","Object","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","start","stop","animate","autoplay","driver","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","call","animation","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"sources":["/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/node_modules/popmotion/dist/popmotion.es.js"],"sourcesContent":["import { __rest, __assign, __spreadArrays } from 'tslib';\nimport { warning, invariant } from 'hey-listen';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration,\n        duration = _b === void 0 ? 800 : _b,\n        _c = _a.bounce,\n        bounce = _c === void 0 ? 0.25 : _c,\n        _d = _a.velocity,\n        velocity = _d === void 0 ? 0 : _d,\n        _e = _a.mass,\n        mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - a / b * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return factor * ((d - e) * f) / g;\n        };\n    } else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10\n        };\n    } else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) {\n        return options[key] !== undefined;\n    });\n}\nfunction getSpringOptions(options) {\n    var springOptions = __assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = __assign(__assign(__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0.0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1.0 : _c,\n        _d = _a.restSpeed,\n        restSpeed = _d === void 0 ? 2 : _d,\n        restDelta = _a.restDelta,\n        options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options),\n        stiffness = _e.stiffness,\n        damping = _e.damping,\n        mass = _e.mass,\n        velocity = _e.velocity,\n        isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n            };\n        } else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n            };\n        } else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            } else {\n                state.done = t >= options.duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        }\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) {\n    return 0;\n};\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) {\n        return type.test(v);\n    });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== 'alpha') {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) {\n    return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n    return function (v) {\n        return b(a(v));\n    };\n};\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) {\n            return mix(origin, target, v);\n        };\n    } else if (color.test(origin)) {\n        return mixColor(origin, target);\n    } else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArrays(from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        return getMixer(fromThis, to[i]);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === 'number') {\n            numNumbers++;\n        } else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            } else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) {\n    return function (p) {\n        return mix(from, to, p);\n    };\n};\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    } else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        } else {\n            return mixComplex;\n        }\n    } else if (Array.isArray(v)) {\n        return mixArray;\n    } else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0],\n        to = _a[1];\n    var mixer = _b[0];\n    return function (v) {\n        return mixer(progress(from, to, v));\n    };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        } else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.clamp,\n        isClamp = _c === void 0 ? true : _c,\n        ease = _b.ease,\n        mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n    return isClamp ? function (v) {\n        return interpolator(clamp(input[0], input[inputLength - 1], v));\n    } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrorEasing = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0) return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () {\n        return easing || easeInOut;\n    }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) {\n        return o * duration;\n    });\n}\nfunction keyframes(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        ease = _a.ease,\n        offset = _a.offset,\n        _d = _a.duration,\n        duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        }\n    };\n}\n\nfunction decay(_a) {\n    var _b = _a.velocity,\n        velocity = _b === void 0 ? 0 : _b,\n        _c = _a.from,\n        from = _c === void 0 ? 0 : _c,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 350 : _e,\n        _f = _a.restDelta,\n        restDelta = _f === void 0 ? 0.5 : _f,\n        modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal) amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () {}\n    };\n}\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    } else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n        return keyframes;\n    } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    if (isForwardPlayback === void 0) {\n        isForwardPlayback = true;\n    }\n    return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () {\n            return sync.update(passTimestamp, true, true);\n        },\n        stop: function () {\n            return cancelSync.update(passTimestamp);\n        }\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from,\n        _d = _a.autoplay,\n        autoplay = _d === void 0 ? true : _d,\n        _e = _a.driver,\n        driver = _e === void 0 ? framesync : _e,\n        _f = _a.elapsed,\n        elapsed = _f === void 0 ? 0 : _f,\n        _g = _a.repeat,\n        repeatMax = _g === void 0 ? 0 : _g,\n        _h = _a.repeatType,\n        repeatType = _h === void 0 ? \"loop\" : _h,\n        _j = _a.repeatDelay,\n        repeatDelay = _j === void 0 ? 0 : _j,\n        onPlay = _a.onPlay,\n        onStop = _a.onStop,\n        onComplete = _a.onComplete,\n        onRepeat = _a.onRepeat,\n        onUpdate = _a.onUpdate,\n        options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        } else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\") animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback) delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            } else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        }\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 750 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget,\n        driver = _a.driver,\n        onUpdate = _a.onUpdate,\n        onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return min !== undefined && v < min || max !== undefined && v > max;\n    }\n    function boundaryNearest(v) {\n        if (min === undefined) return max;\n        if (max === undefined) return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    } else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n        });\n    }\n    return {\n        stop: function () {\n            return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        }\n    };\n}\n\nvar radiansToDegrees = function (radians) {\n    return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n    if (b === void 0) {\n        b = zeroPoint;\n    }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        } else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) {\n    return v;\n};\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) {\n        alterDisplacement = identity;\n    }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n    };\n};\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n    return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n    return Math.abs(a - b);\n};\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    } else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) {\n        precision = 2;\n    }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) {\n        smoothing = 0;\n    }\n    return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) {\n        strength = 50;\n    }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) {\n            return Math.round(v / points) * points;\n        };\n    } else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0) return point;\n                if (distance > lastDistance) return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1) return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        } else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2) return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) {\n        direction = 'end';\n    }\n    return function (progress) {\n        progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}