{"ast":null,"code":"import classNames from 'classnames';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport { INTERNAL_HOOKS } from \"rc-table/es/Table\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport SizeContext from '../config-provider/SizeContext';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport renderExpandIcon from './ExpandIcon';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport RcTable from './RcTable';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\n\nfunction InternalTable(props, ref) {\n  const {\n    getPopupContainer: getContextPopupContainer\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = true\n  } = props;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const size = React.useContext(SizeContext);\n  const {\n    locale: contextLocale = defaultLocale,\n    direction,\n    renderEmpty,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const mergedSize = customizeSize || size;\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  }; // ============================ RowKey ============================\n\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey); // ============================ Events =============================\n\n  const changeEventInfo = {};\n\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n\n    if (reset) {\n      changeEventInfo.resetPagination(); // Reset event param\n\n      if (changeInfo.pagination.current) {\n        changeInfo.pagination.current = 1;\n      } // Trigger pagination events\n\n\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, changeInfo.pagination.pageSize);\n      }\n    }\n\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n\n\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates; // ============================ Filter ============================\n\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  });\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates; // ============================ Column ============================\n\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps); // ========================== Pagination ==========================\n\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination; // ============================= Data =============================\n\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'Table', '`current` should be positive number.') : void 0; // Dynamic table data\n\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n\n      return mergedData;\n    }\n\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]); // ========================== Selections ==========================\n\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection);\n\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  }; // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n\n\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon; // Customize expandable icon\n\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale); // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  } // Indent size\n\n\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  } // ============================ Render ============================\n\n\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n\n    const renderPagination = position => /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  } // >>>>>>>>> Spinning\n\n\n  let spinProps;\n\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  } // Style\n\n\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: wrapperClassNames,\n    style: style\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(RcTable, Object.assign({}, tableProps, {\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode)));\n}\n\nexport default /*#__PURE__*/React.forwardRef(InternalTable);","map":{"version":3,"names":["classNames","convertChildrenToColumns","INTERNAL_HOOKS","omit","React","ConfigContext","DefaultRenderEmpty","SizeContext","useBreakpoint","defaultLocale","Pagination","Spin","scrollTo","warning","renderExpandIcon","useFilter","getFilterData","useLazyKVMap","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useSelection","useSorter","getSortData","useTitleColumns","RcTable","useStyle","EMPTY_LIST","InternalTable","props","ref","getPopupContainer","getContextPopupContainer","useContext","prefixCls","customizePrefixCls","className","rootClassName","style","size","customizeSize","bordered","dropdownPrefixCls","customizeDropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","childrenColumnName","legacyChildrenColumnName","onChange","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","scroll","sortDirections","locale","showSorterTooltip","process","env","NODE_ENV","length","baseColumns","useMemo","needResponsive","some","col","responsive","screens","mergedColumns","matched","Set","Object","keys","filter","m","c","r","has","tableProps","contextLocale","direction","renderEmpty","getPrefixCls","mergedSize","tableLocale","assign","Table","rawData","mergedExpandable","expandType","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","action","reset","arguments","undefined","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","mergedData","columnTitleProps","mergedFilters","forEach","filterKey","transformTitleColumns","onPaginationChange","mergedPagination","pageData","total","slice","transformSelectionColumns","selectedKeySet","data","internalRowClassName","index","indent","mergedRowClassName","__PARENT_RENDER_ICON__","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","createElement","defaultPosition","Array","isArray","topPos","find","p","includes","bottomPos","isDisable","every","toLowerCase","replace","spinProps","spinning","wrapSSR","hashId","wrapperClassNames","emptyText","componentName","internalHooks","forwardRef"],"sources":["/Users/chune/Documents/RMS Geoespacial/ERP/Emilus - React Admin Template/starter/node_modules/antd/es/table/InternalTable.js"],"sourcesContent":["import classNames from 'classnames';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport { INTERNAL_HOOKS } from \"rc-table/es/Table\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport SizeContext from '../config-provider/SizeContext';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport renderExpandIcon from './ExpandIcon';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport RcTable from './RcTable';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nfunction InternalTable(props, ref) {\n  const {\n    getPopupContainer: getContextPopupContainer\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = true\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const size = React.useContext(SizeContext);\n  const {\n    locale: contextLocale = defaultLocale,\n    direction,\n    renderEmpty,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const mergedSize = customizeSize || size;\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  };\n  // ============================ RowKey ============================\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n  // ============================ Events =============================\n  const changeEventInfo = {};\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n    if (reset) {\n      changeEventInfo.resetPagination();\n      // Reset event param\n      if (changeInfo.pagination.current) {\n        changeInfo.pagination.current = 1;\n      }\n      // Trigger pagination events\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, changeInfo.pagination.pageSize);\n      }\n    }\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates;\n  // ============================ Filter ============================\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  });\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates;\n  // ============================ Column ============================\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n  // ========================== Pagination ==========================\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination;\n  // ============================= Data =============================\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'Table', '`current` should be positive number.') : void 0;\n    // Dynamic table data\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n      return mergedData;\n    }\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]);\n  // ========================== Selections ==========================\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection);\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  };\n  // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n  // Customize expandable icon\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n  // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  }\n  // Indent size\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  }\n  // ============================ Render ============================\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n    const renderPagination = position => /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  }\n  // >>>>>>>>> Spinning\n  let spinProps;\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  }\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: wrapperClassNames,\n    style: style\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(RcTable, Object.assign({}, tableProps, {\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode)));\n}\nexport default /*#__PURE__*/React.forwardRef(InternalTable);"],"mappings":"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"},"metadata":{},"sourceType":"module"}